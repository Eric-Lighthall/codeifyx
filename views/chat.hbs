<div class="row">
  <div class="col-md-6">
    <div class="profile-info">
      <h6>Dashboard</h6>
      <h3>Welcome {{name}}</h3>
    </div>
  </div>
  <div class="col-md-6 text-end">
    <div class="dropdown">
      <button class="btn btn-secondary dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown"
        aria-expanded="false">
        Programming Language
      </button>
      <ul class="dropdown-menu" aria-labelledby="languageDropdown">
        <li><a class="dropdown-item" href="#">JavaScript</a></li>
        <li><a class="dropdown-item" href="#">Python</a></li>
        <li><a class="dropdown-item" href="#">Java</a></li>
        <li><a class="dropdown-item" href="#">C++</a></li>
      </ul>
    </div>
  </div>
</div>

<div class="chat-container">
  <div class="chat-messages">
    {{#each messages}}
    <div class="message {{role}}">
      <p>{{content}}</p>
    </div>
    {{/each}}
  </div>
</div>

<div class="chat-bar-container">
  <div class="chat-bar">
    <div class="input-group">
      <input type="text" class="form-control" id="messageInput" placeholder="Type your message..." aria-label="Message">
    </div>
  </div>
</div>

<script>
  const chatMessages = document.querySelector('.chat-messages');
  const messageInput = document.getElementById('messageInput');

  messageInput.addEventListener('keypress', async (event) => {
    if (event.key === 'Enter') {
      const userMessage = messageInput.value;
      messageInput.value = '';
      addMessageToChat('user', userMessage);

      try {
        const response = await fetch('/api/chat', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ message: userMessage }),
        });

        if (response.ok) {
          const stream = response.body.pipeThrough(new TextDecoderStream()).getReader();
          const assistantMessageElement = addMessageToChat('assistant', '');

          while (true) {
            const { done, value } = await stream.read();
            if (done) break;

            assistantMessageElement.innerHTML += value;
            chatMessages.scrollTop = chatMessages.scrollHeight;
          }
        } else {
          throw new Error('API request failed');
        }
      } catch (error) {
        console.error('Error:', error);
        addMessageToChat('error', 'Oops! Something went wrong. Please try again.');
      }
    }
  });

  function addMessageToChat(role, content) {
    const messageElement = document.createElement('div');
    messageElement.classList.add('message', role);
    messageElement.innerHTML = `<p>${content}</p>`;
    chatMessages.appendChild(messageElement);
    chatMessages.scrollTop = chatMessages.scrollHeight;
    return messageElement;
  }
</script>