<div class="row h-100">
  <div class="col-md-2 fixed-sidebar" id="recent-chats">
    <div class="recent-chats d-flex flex-column h-100">
      <div class="text-center mt-3 logo-container">
        <a href="/">
          <img src="/images/codeifyxlogosmall.webp" alt="Small Logo" class="small-logo img-fluid">
          <img src="/images/codeifyxlogo3.webp" alt="Full Logo" class="full-logo img-fluid mb-2">
        </a>
      </div>
      <div class="chat-list">
        <h4 class="recent-chats-title mt-4">
          <span class="recent-chats-text">Recent Chats</span>
        </h4>
        <a href="/chat" class="btn btn-primary new-chat-btn d-flex align-items-center">
          <i class="fas fa-plus new-chat-icon"></i>
          <span class="new-chat-text ms-2">New Chat</span>
        </a>
        <ul class="list-group recent-chats-list">
          {{#each recentChats}}
          <li class="list-group-item recent-chat-item">
            <a href="/chat/{{this.id}}" class="recent-chat-link d-flex align-items-center text-decoration-none">
              <div class="logo-container d-flex align-items-center">
                <img src="{{this.languageLogo}}" alt="Language Logo" class="language-logo">
              </div>
              <span class="chat-details flex-grow-1 ms-2">Chat</span>
              <button class="btn btn-sm btn-danger delete-chat-btn" data-chat-id="{{this.id}}">
                <i class="fas fa-trash-alt"></i>
              </button>
            </a>
          </li>
          {{/each}}
        </ul>
      </div>
      <div class="sidebar-footer">
        <div class="settings text-center mb-4">
          <a href="/settings" class="settings-link">
            <i class="fas fa-cog"></i>
            <span class="settings-text">Settings</span>
          </a>
        </div>
        <div class="terms text-center mb-4">
          <a href="/terms" class="terms-link">
            <i class="fas fa-file-alt"></i>
            <span class="terms-text">Terms</span>
          </a>
        </div>
        <div class="profile text-center mb-4">
          <a href="/profile" class="profile-link">
            <img src="{{user.image}}" alt="Profile Image" class="profile-image rounded-circle">
            <span class="display-name fw-bold">{{user.displayName}}</span>
          </a>
        </div>
      </div>
    </div>
  </div>
  <div class="col-md-10 d-flex justify-content-center mx-auto">
    <div class="main-content w-70 d-flex flex-column h-100">
      <div class="row">
        <div class="col-md-12">
          <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="languageDropdown"
              data-bs-toggle="dropdown" aria-expanded="false">
              <img src="{{selectedLanguage.logo}}" class="language-logo me-2" />
              {{selectedLanguage.name}}
              <i class="fas fa-caret-down ms-2"></i>
            </button>
            <ul class="dropdown-menu" aria-labelledby="languageDropdown">
              {{#each languages}}
              <li>
                <a class="dropdown-item" href="#" data-language="{{this.name}}">
                  <img src="{{this.logo}}" class="language-logo me-2" />
                  {{this.name}}
                </a>
              </li>
              {{/each}}
            </ul>
          </div>
        </div>
      </div>
      <div class="row w-100 flex-grow-1">
        <div class="col-md-12 mt-5">
          <div class="chat-messages h-100">
            {{#if messages.length}}
            {{#each messages}}
            <div class="message {{this.role}}">
              <div class="message-container">
                {{#if (eq role 'user')}}
                <img src="{{user.image}}" alt="User Image" class="user-image rounded-circle">
                {{else}}
                <img src="/images/codeifyxlogosmall.webp" alt="AI Image" class="assistant-image rounded-circle">
                {{/if}}
                <div class="message-content">
                  <p>{{this.content}}</p>
                </div>
              </div>
            </div>
            {{/each}}
            {{else}}
            <div class="empty-state text-center">
              <img src="/images/codeifyxlogosmall.webp" alt="CodeifyX Logo" class="mb-3 small-logo fade-in">
              <h3 class="fw-bold fade-in">What can I help you with?</h3>
            </div>
            {{/if}}
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12">
          <div class="chat-bar">
            <div class="input-group">
              <input type="text" class="form-control" id="messageInput" placeholder="Type your message..."
                aria-label="Message">
              <input type="hidden" id="chatIdInput" value="{{chatId}}">
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const chatMessages = document.querySelector('.chat-messages');
  const messageInput = document.getElementById('messageInput');
  const emptyState = document.querySelector('.empty-state');
  let selectedLanguage = '{{selectedLanguage.name}}';

  let chatId = chatIdInput.value;

  messageInput.addEventListener('keypress', async (event) => {
    if (event.key === 'Enter') {
      const userMessage = messageInput.value;
      messageInput.value = '';
      addMessageToChat('user', userMessage);

      try {
        const response = await fetch('/api/chat', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            message: userMessage,
            chatId: chatId,
            language: selectedLanguage,
          }),
        });

        if (response.ok) {
          const stream = response.body.pipeThrough(new TextDecoderStream()).getReader();
          const assistantMessageElement = addMessageToChat('assistant', '');
          const assistantMessageContentElement = assistantMessageElement.querySelector('.message-content p');

          while (true) {
            const { done, value } = await stream.read();
            if (done) break;
            if (value.startsWith('data: ')) {
              const data = JSON.parse(value.slice(6));
              const newChatId = data.chatId;
              const newChatLanguage = selectedLanguage;
              const newChatLanguageLogo = document.querySelector(`.dropdown-menu a[data-language="${newChatLanguage}"] img`).getAttribute('src');

              if (newChatId !== chatId) {
                const recentChatsList = document.querySelector('.recent-chats-list');
                const existingChatItem = recentChatsList.querySelector(`[data-chat-id="${newChatId}"]`);

                if (!existingChatItem) {
                  const newChatItem = document.createElement('li');
                  newChatItem.classList.add('list-group-item', 'recent-chat-item');
                  newChatItem.setAttribute('data-chat-id', newChatId);

                  newChatItem.innerHTML = `
                  <a href="/chat/${newChatId}" class="recent-chat-link d-flex align-items-center text-decoration-none">
                    <div class="logo-container d-flex align-items-center">
                      <img src="${newChatLanguageLogo}" alt="Language Logo" class="language-logo">
                    </div>
                    <span class="chat-details flex-grow-1 ms-2">Chat ${newChatId}</span>
                    <button class="btn btn-sm btn-danger delete-chat-btn" data-chat-id="${newChatId}">
                      <i class="fas fa-trash-alt"></i>
                    </button>
                  </a>
                `;
                  recentChatsList.insertBefore(newChatItem, recentChatsList.firstChild);
                }
              }
              chatId = newChatId;
            }
            else {
              assistantMessageContentElement.innerHTML += value;
              chatMessages.scrollTop = chatMessages.scrollHeight;
            }
          }

          if (chatId) {
            history.pushState(null, '', `/chat/${chatId}`);
          }

        } else {
          throw new Error('API request failed');
        }
      } catch (error) {
        console.error('Error:', error);
        addMessageToChat('error', 'Oops! Something went wrong. Please try again.');
      }
    }
  });

  function addMessageToChat(role, content) {
    const messageElement = document.createElement('div');
    messageElement.classList.add('message');

    if (role === 'user') {
      messageElement.classList.add('user-message');
      messageElement.innerHTML = `
      <div class="message-container">
        <img src="{{user.image}}" alt="User Image" class="user-image rounded-circle">
        <div class="message-content">
          <p>${content}</p>
        </div>
      </div>
    `;
    } else if (role === 'assistant') {
      messageElement.classList.add('assistant-message');
      messageElement.innerHTML = `
      <div class="message-container">
        <img src="/images/codeifyxlogosmall.webp" alt="AI Image" class="assistant-image rounded-circle">
        <div class="message-content">
          <p>${content}</p>
        </div>
      </div>
    `;
    } else {
      messageElement.innerHTML = `<p>${content}</p>`;
    }

    chatMessages.appendChild(messageElement);
    chatMessages.scrollTop = chatMessages.scrollHeight;
    if (emptyState) {
      emptyState.style.display = 'none';
    }
    return messageElement;
  }

  document.addEventListener('DOMContentLoaded', function () {
    const languageDropdownItems = document.querySelectorAll('.dropdown-menu a');
    const languageDropdownButton = document.getElementById('languageDropdown');

    languageDropdownItems.forEach(item => {
      item.addEventListener('click', function (event) {
        event.preventDefault();
        selectedLanguage = this.getAttribute('data-language');
        const selectedLanguageLogo = this.querySelector('img').src;
        languageDropdownButton.innerHTML = `
        <img src="${selectedLanguageLogo}" class="language-logo me-2" />
        ${selectedLanguage}
        <i class="fas fa-caret-down ms-2"></i>
      `;
      });
    });

    const recentChatsList = document.querySelector('.recent-chats-list');
    recentChatsList.addEventListener('click', async function (event) {
      if (event.target.closest('.delete-chat-btn')) {
        event.preventDefault();
        const chatId = event.target.closest('.delete-chat-btn').getAttribute('data-chat-id');
        await deleteChat(chatId);
      }
    });
  });

  async function deleteChat(chatId) {
    try {
      const response = await fetch(`/api/chat/${chatId}`, {
        method: 'DELETE',
      });

      //console.log('Response status:', response.status);
      //console.log('Response body:', await response.json());

      if (response.ok) {
        const chatItem = document.querySelector(`.recent-chat-item a[href="/chat/${chatId}"]`).closest('.recent-chat-item');
        if (chatItem) {
          chatItem.remove();
        }
        const currentChatId = document.getElementById('chatIdInput').value;
        if (!currentChatId || chatId === currentChatId) {
          window.location.href = '/chat';
        }
      }
    }
    catch (error) {
      console.error('Error:', error);
      alert('Failed to delete chat. Please try again.');
    }
  };
</script>