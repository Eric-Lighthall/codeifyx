<div class="row h-100">
  <div class="col-md-2 fixed-sidebar" id="recent-chats">
    <div class="recent-chats d-flex flex-column justify-content-between h-100">
      <div class="text-center mt-3 logo-container">
        <a href="/">
          <img src="/images/codeifyxlogosmall.webp" alt="Small Logo" class="small-logo img-fluid">
          <img src="/images/codeifyxlogo3.webp" alt="Full Logo" class="full-logo img-fluid">
        </a>
      </div>
      <div class="chat-list">
        <h4>Recent Chats</h4>
        <ul class="list-group">
          {{#each recentChats}}
          <li class="list-group-item">
            <a href="/chat/{{this.id}}">{{this.title}}</a>
          </li>
          {{/each}}
        </ul>
      </div>
      <div class="daily-quota text-center">
        <p>Used Tokens: {{usedTokens}}</p>
        <p>Available Tokens: {{availableTokens}}</p>
      </div>
      <div class="profile d-flex align-items-center">
        <img src="{{user.image}}" alt="Profile Image" class="profile-image rounded-circle me-2">
        <a href="/profile" class="display-name fw-bold">{{user.displayName}}</a>
      </div>
    </div>
  </div>
  <div class="col-md-10 d-flex justify-content-center mx-auto">
    <div class="main-content w-70 d-flex flex-column h-100">
      <div class="row">
        <div class="col-md-12">
          <div class="dropdown">
            <button class="btn btn-dark dropdown-toggle" type="button" id="languageDropdown" data-bs-toggle="dropdown"
              aria-expanded="false">
              Programming Language
            </button>
            <ul class="dropdown-menu" aria-labelledby="languageDropdown">
              <li>
                <a class="dropdown-item" href="#">
                  <i class="fab fa-js-square me-2"></i>JavaScript
                </a>
              </li>
              <li>
                <a class="dropdown-item" href="#">
                  <i class="fab fa-python me-2"></i>Python
                </a>
              </li>
              <li>
                <a class="dropdown-item" href="#">
                  <i class="fab fa-java me-2"></i>Java
                </a>
              </li>
              <li>
                <a class="dropdown-item" href="#">
                  <i class="fab fa-cuttlefish me-2"></i>C++
                </a>
              </li>
            </ul>
          </div>
        </div>
      </div>
      <div class="row w-100 flex-grow-1">
        <div class="col-md-12">
          <div class="chat-messages h-100">
            {{#each messages}}
            <div class="message {{role}}">
              <p>{{content}}</p>
            </div>
            {{/each}}
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col-md-12">
          <div class="chat-bar">
            <div class="input-group">
              <input type="text" class="form-control" id="messageInput" placeholder="Type your message..."
                aria-label="Message">
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const chatMessages = document.querySelector('.chat-messages');
  const messageInput = document.getElementById('messageInput');

  messageInput.addEventListener('keypress', async (event) => {
    if (event.key === 'Enter') {
      const userMessage = messageInput.value;
      messageInput.value = '';
      addMessageToChat('user', userMessage);

      try {
        const response = await fetch('/api/chat', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ message: userMessage }),
        });

        if (response.ok) {
          const stream = response.body.pipeThrough(new TextDecoderStream()).getReader();
          const assistantMessageElement = addMessageToChat('assistant', '');

          while (true) {
            const { done, value } = await stream.read();
            if (done) break;

            assistantMessageElement.innerHTML += value;
            chatMessages.scrollTop = chatMessages.scrollHeight;
          }
        } else {
          throw new Error('API request failed');
        }
      } catch (error) {
        console.error('Error:', error);
        addMessageToChat('error', 'Oops! Something went wrong. Please try again.');
      }
    }
  });

  function addMessageToChat(role, content) {
    const messageElement = document.createElement('div');
    messageElement.classList.add('message', role);
    messageElement.innerHTML = `<p>${content}</p>`;
    chatMessages.appendChild(messageElement);
    chatMessages.scrollTop = chatMessages.scrollHeight;
    return messageElement;
  }
</script>